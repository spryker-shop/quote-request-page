{# @deprecated Use molecule product-cart-item form CartPage instead. #}
{% extends model('component') %}

{% define config = {
    name: 'quote-request-cart-item',
    tag: 'article'
} %}

{% define data = {
    priceMode: required,
    cartItem: required,
    currency: required,
} %}

{% block body %}
    <div class="grid grid--stretch grid--justify">
        <div class="col col--sm-12 col--lg-2">
            {% include molecule('cart-image', 'CartPage') with {
                data: {
                    name: data.cartItem.name | default(''),
                    image: data.cartItem.images is empty ? null : (data.cartItem.images | first)
                }
            } only %}
        </div>

        <div class="col col--sm-12 col--lg-5">
            <h6>{{ data.cartItem.name }}</h6>

            <small class="text-secondary">
                {{ 'cart.item.sku' | trans }}
                {{ data.cartItem.sku }}
            </small>

            {% include molecule('quote-request-item-summary', 'QuoteRequestPage') with {
                data: {
                    priceMode: data.priceMode,
                    unitPrice: data.cartItem.unitPrice | money(true, data.currency.code),
                    subtotalPrice: data.cartItem.sumSubtotalAggregation | money(true, data.currency.code),
                    cartItem: data.cartItem,
                    currency: data.currency,
                }
            } only %}
        </div>

        <div class="col col--sm-12 col--lg-4">
            {% if data.cartItem.quantitySalesUnit is not empty and data.cartItem.amountSalesUnit is not empty %}
                {% include molecule('packaging-unit-cart', 'ProductPackagingUnitWidget') ignore missing with {
                    data: {
                        amount: data.cartItem.amount,
                        quantity: data.cartItem.quantity,
                        quantitySalesUnit: data.cartItem.quantitySalesUnit,
                        quantityConversion: data.cartItem.quantitySalesUnit.conversion,
                        quantityProductMeasurementUnit: data.cartItem.quantitySalesUnit.productMeasurementUnit,
                        amountSalesUnit: data.cartItem.amountSalesUnit,
                        amountConversion: data.cartItem.amountSalesUnit.conversion,
                        amountProductMeasurementUnit: data.cartItem.amountSalesUnit.productMeasurementUnit,
                        amountValue: data.cartItem.amountSalesUnit.value
                    }
                } only %}
            {% endif %}

            {% if data.cartItem.amountSalesUnit is empty %}
                {{ 'cart.item_quantity' | trans }}:
                <strong>{{ data.cartItem.quantity }}</strong>

                {% if data.cartItem.quantitySalesUnit is not empty %}
                    {% set value = data.cartItem.quantitySalesUnit.value %}
                    {% set precision = data.cartItem.quantitySalesUnit.precision %}
                    {% set salesUnitName = data.cartItem.quantitySalesUnit.productMeasurementUnit.name | default('') %}

                    <p>
                        <small class="text-secondary">
                            [= {{ value / precision }} {{ salesUnitName | trans }}]
                        </small>
                    </p>
                {% endif %}
            {% endif %}

            {% block sourcePriceForm %}{% endblock %}
        </div>
    </div>
{% endblock %}
